upstream csc_servers {
    server host.docker.internal:3004;
}

# api, prod
# server {
#     listen 80;
#     listen [::]:80;
#     server_name dancf.com www.dancf.com admin.dancf.com api.dancf.com;

#     return 301 https://$host$request_uri;
# }

# api, prod, ssl
# server {
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;
#     server_name dancf.com www.dancf.com admin.dancf.com api.dancf.com;

#     if ( $host = dancf.com ) {
#         return 301 https://www.dancf.com$request_uri;
#     }

#     # certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
#     ssl_certificate /home/wwwroot/caishichang/current/.nginx/dancf.com.crt;
#     ssl_certificate_key /home/wwwroot/caishichang/current/.nginx/dancf.com.key;
#     ssl_session_timeout 1d;
#     ssl_session_cache shared:SSL:50m;
#     ssl_session_tickets off;

#     # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
#     # ssl_dhparam /path/to/dhparam.pem;

#     # intermediate configuration. tweak to your needs.
#     ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
#     ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
#     ssl_prefer_server_ciphers on;

#     # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
#     # add_header Strict-Transport-Security max-age=15768000;

#     # OCSP Stapling ---
#     # fetch OCSP records from URL in ssl_certificate and cache them
#     ssl_stapling on;
#     ssl_stapling_verify off;

#     ## verify chain of trust of OCSP response using Root CA and Intermediate certs
#     # ssl_trusted_certificate /path/to/root_CA_cert_plus_intermediates;

#     gzip on;

#     access_log /home/wwwlogs/csc-access-ssl-api.log main;
#     error_log /home/wwwlogs/csc-error-ssl-api.log warn;

#     location / {
#         proxy_set_header    Host $host;
#         proxy_set_header    X-Real-IP  $remote_addr;
#         proxy_set_header    X-Forwarded-For $remote_addr;
#         proxy_pass          http://csc_servers;
#     }
# }

# api, prod, inner
# server {
#     #listen 47.96.253.41:80;
#     listen 10.80.222.168:80;
#     server_name api.inner.dancf.com;

#     location / {
#         # proxy_set_header    Host $host;
#         proxy_set_header    Host api.dancf.com;
#         proxy_set_header    X-Real-IP  $remote_addr;
#         proxy_set_header    X-Forwarded-For $remote_addr;
#         proxy_pass          http://csc_servers;
#     }
# }

# jobs, prod
server {
    listen 80;
    server_name  jobs.admin.dancf.com;

    location / {
        proxy_set_header    Host $host;
        proxy_set_header    X-Real-IP  $remote_addr;
        proxy_set_header    X-Forwarded-For $remote_addr;
        proxy_pass          http://host.docker.internal:3003;
    }

    access_log off;
}



## -----

# [api, www, admin], dev
server {
    listen 80;
    server_name  www.dancf.localhost api.dancf.localhost s.dancf.com;

    location / {
        # proxy_set_header    Host $host;
        # proxy_set_header    X-Real-IP  $remote_addr;
        # proxy_set_header    X-Forwarded-For $remote_addr;

        proxy_set_header    Host $host;
        proxy_set_header    X-Real-IP  $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass          http://csc_servers;
    }
}

# doc, dev
# server {
#     listen 80;
#     server_name  doc.api.dev.dancf.com;

#     set $wwwRoot /Users/mikongge/works/git/caishichang/docs/api;

#     root $wwwRoot;
# }
# server {
#     listen 80;
#     server_name  doc.api_admin.dev.dancf.com;

#     set $wwwRoot /Users/mikongge/works/git/caishichang/docs/admin;

#     root $wwwRoot;
# }
